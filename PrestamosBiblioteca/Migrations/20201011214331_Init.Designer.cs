// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrestamosBiblioteca.DataAccess;

namespace PrestamosBiblioteca.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201011214331_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrestamosBiblioteca.Models.Carrera", b =>
                {
                    b.Property<int>("CarreraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarreraId");

                    b.HasIndex("FacultadId");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            CarreraId = 1,
                            Codigo = "000",
                            FacultadId = 1,
                            Nombre = "GENERAL"
                        },
                        new
                        {
                            CarreraId = 5,
                            Codigo = "101",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN PERIODISMO Y COMUNICACIÓN AUDIOVISUAL"
                        },
                        new
                        {
                            CarreraId = 6,
                            Codigo = "102",
                            FacultadId = 500,
                            Nombre = "LICENCIATURA EN ENFERMERIA"
                        },
                        new
                        {
                            CarreraId = 7,
                            Codigo = "103",
                            FacultadId = 500,
                            Nombre = "TECNICO EN ENFERMERIA"
                        },
                        new
                        {
                            CarreraId = 8,
                            Codigo = "104",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS DE LA EDUCACION CON ESPECIALIDAD EN IDIOMA INGLÉS"
                        },
                        new
                        {
                            CarreraId = 9,
                            Codigo = "110",
                            FacultadId = 500,
                            Nombre = "DOCTORADO EN MEDICINA"
                        },
                        new
                        {
                            CarreraId = 10,
                            Codigo = "119",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS DE LA EDUCACION CON ESPECIALIDAD EN EDUCACION BASICA"
                        },
                        new
                        {
                            CarreraId = 11,
                            Codigo = "120",
                            FacultadId = 100,
                            Nombre = "PROFESORADO EN EDUCACION BASICA PARA PRIMERO Y SEGUNDO CICLO"
                        },
                        new
                        {
                            CarreraId = 12,
                            Codigo = "127",
                            FacultadId = 100,
                            Nombre = "PROFESORADO EN EDUCACIÓN PARVULARIA"
                        },
                        new
                        {
                            CarreraId = 13,
                            Codigo = "128",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS RELIGIOSAS"
                        },
                        new
                        {
                            CarreraId = 14,
                            Codigo = "129",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS DE LA EDUCACION CON ESPECIALIDAD EN EDUCACION PARVULARIA"
                        },
                        new
                        {
                            CarreraId = 15,
                            Codigo = "130",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN EDUCACION INICIAL Y  PARVULARIA"
                        },
                        new
                        {
                            CarreraId = 16,
                            Codigo = "131",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS DE LA EDUCACION ESPECIALIDAD EN MATEMATICA SEMIPRESENCIAL"
                        },
                        new
                        {
                            CarreraId = 17,
                            Codigo = "132",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS DE LA EDUCACION ESPECIALIDAD EN DIRECCION Y ADMINISTRACION ESCOLAR - SEMIPRESENCIAL"
                        },
                        new
                        {
                            CarreraId = 18,
                            Codigo = "133",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS DE LA EDUCACION ESPECIALIDAD EN EDUCACION BASICA SEMIPRESENCIAL"
                        },
                        new
                        {
                            CarreraId = 19,
                            Codigo = "135",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN IDIOMA INGLES (SEMIPRESENCIAL)"
                        },
                        new
                        {
                            CarreraId = 20,
                            Codigo = "140",
                            FacultadId = 100,
                            Nombre = "PROFESORADO EN EDUCACION  BASICA PARA PRIMERO Y SEGUNDO CICLOS"
                        },
                        new
                        {
                            CarreraId = 21,
                            Codigo = "144",
                            FacultadId = 100,
                            Nombre = "PROFESORADO Y LICENCIATURA EN EDUCACION INICIAL Y PARVULARIA"
                        },
                        new
                        {
                            CarreraId = 22,
                            Codigo = "145",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN IDIOMA INGLES"
                        },
                        new
                        {
                            CarreraId = 23,
                            Codigo = "160",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN DISEÑO GRAFICO PUBLICITARIO"
                        },
                        new
                        {
                            CarreraId = 25,
                            Codigo = "209",
                            FacultadId = 600,
                            Nombre = "INGENIERIA EN TECNOLOGIA Y PROCESAMIENTO DE ALIMENTOS"
                        },
                        new
                        {
                            CarreraId = 26,
                            Codigo = "301",
                            FacultadId = 100,
                            Nombre = "LICENCIATURA EN CIENCIAS JURIDICAS"
                        },
                        new
                        {
                            CarreraId = 29,
                            Codigo = "410",
                            FacultadId = 800,
                            Nombre = "LICENCIATURA EN SISTEMAS INFORMATICOS ADMINISTRATIVOS"
                        },
                        new
                        {
                            CarreraId = 30,
                            Codigo = "601",
                            FacultadId = 600,
                            Nombre = "INGENIERIA INDUSTRIAL"
                        },
                        new
                        {
                            CarreraId = 31,
                            Codigo = "602",
                            FacultadId = 600,
                            Nombre = "ARQUITECTURA"
                        },
                        new
                        {
                            CarreraId = 32,
                            Codigo = "603",
                            FacultadId = 600,
                            Nombre = "INGENIERIA CIVIL"
                        },
                        new
                        {
                            CarreraId = 33,
                            Codigo = "604",
                            FacultadId = 600,
                            Nombre = "INGENIERIA CIVIL SANEAMIENTO AMBIENTAL"
                        },
                        new
                        {
                            CarreraId = 34,
                            Codigo = "605",
                            FacultadId = 600,
                            Nombre = "INGENIERIA EN SISTEMAS INFORMATICOS"
                        },
                        new
                        {
                            CarreraId = 35,
                            Codigo = "606",
                            FacultadId = 600,
                            Nombre = "INGENIERIA AGRONOMICA"
                        },
                        new
                        {
                            CarreraId = 36,
                            Codigo = "607",
                            FacultadId = 600,
                            Nombre = "INGENIERIA EN TELECOMUNICACIONES Y REDES"
                        },
                        new
                        {
                            CarreraId = 37,
                            Codigo = "608",
                            FacultadId = 600,
                            Nombre = "INGENIERIA EN DESARROLLO DE SOFTWARE"
                        },
                        new
                        {
                            CarreraId = 40,
                            Codigo = "801",
                            FacultadId = 800,
                            Nombre = "LICENCIATURA EN ADMINISTRACION DE EMPRESAS"
                        },
                        new
                        {
                            CarreraId = 41,
                            Codigo = "802",
                            FacultadId = 800,
                            Nombre = "LICENCIATURA EN MERCADEO Y NEGOCIOS INTERNACIONALES"
                        },
                        new
                        {
                            CarreraId = 42,
                            Codigo = "803",
                            FacultadId = 800,
                            Nombre = "LICENCIATURA EN GESTION Y DESARROLLO TURISTICO"
                        },
                        new
                        {
                            CarreraId = 43,
                            Codigo = "812",
                            FacultadId = 800,
                            Nombre = "LICENCIATURA EN CONTADURIA PUBLICA"
                        },
                        new
                        {
                            CarreraId = 44,
                            Codigo = "890",
                            FacultadId = 800,
                            Nombre = "POSTGRADO EN ESTRATEGIAS PARA LA COMPETITIVIDAD"
                        },
                        new
                        {
                            CarreraId = 45,
                            Codigo = "900",
                            FacultadId = 900,
                            Nombre = "DEPARTAMENTO DE IDIOMAS"
                        },
                        new
                        {
                            CarreraId = 46,
                            Codigo = "901",
                            FacultadId = 800,
                            Nombre = "MAESTRIA EN DIRECCION ESTRATEGICA DE EMPRESAS"
                        },
                        new
                        {
                            CarreraId = 47,
                            Codigo = "902",
                            FacultadId = 100,
                            Nombre = "MAESTRIA EN ASESORIA EDUCATIVA"
                        },
                        new
                        {
                            CarreraId = 49,
                            Codigo = "904",
                            FacultadId = 100,
                            Nombre = "MAESTRIA EN ATENCION INTEGRAL DE LA PRIMERA INFANCIA"
                        },
                        new
                        {
                            CarreraId = 50,
                            Codigo = "905",
                            FacultadId = 600,
                            Nombre = "MAESTRIA EN GERENCIA Y GESTION AMBIENTAL"
                        },
                        new
                        {
                            CarreraId = 51,
                            Codigo = "906",
                            FacultadId = 800,
                            Nombre = "MAESTRIA EN GESTION Y DESARROLLO TURISTICO"
                        },
                        new
                        {
                            CarreraId = 52,
                            Codigo = "982",
                            FacultadId = 100,
                            Nombre = "CURSO DE FORMACION PEDAGOGICA PARA PROFESIONALES"
                        },
                        new
                        {
                            CarreraId = 56,
                            Codigo = "805",
                            FacultadId = 800,
                            Nombre = "LICENCIATURA EN ADMINISTRACION DE EMPRESAS - SEMIPRESENCIAL"
                        });
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Equipo", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.HasKey("EquipoId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Equipos");

                    b.HasData(
                        new
                        {
                            EquipoId = 1,
                            Codigo = "Dell-01",
                            Descripcion = "Pc",
                            MarcaId = 1,
                            Modelo = "Dell G715",
                            Reservado = false
                        });
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Facultad", b =>
                {
                    b.Property<int>("FacultadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultadId");

                    b.ToTable("Facultades");

                    b.HasData(
                        new
                        {
                            FacultadId = 1,
                            Codigo = "NA",
                            Nombre = "NO ASIGNADA"
                        },
                        new
                        {
                            FacultadId = 100,
                            Codigo = "100",
                            Nombre = "CIENCIAS  Y HUMANIDADES"
                        },
                        new
                        {
                            FacultadId = 500,
                            Codigo = "500",
                            Nombre = "FACULTAD DE CIENCIAS DE LA SALUD"
                        },
                        new
                        {
                            FacultadId = 600,
                            Codigo = "600",
                            Nombre = "INGENIERIA Y ARQUITECTURA"
                        },
                        new
                        {
                            FacultadId = 800,
                            Codigo = "800",
                            Nombre = "CIENCIAS EMPRESARIALES"
                        },
                        new
                        {
                            FacultadId = 900,
                            Codigo = "900",
                            Nombre = "DEPARTAMENTO DE IDIOMAS"
                        },
                        new
                        {
                            FacultadId = 906,
                            Nombre = "BIBLIOTECA"
                        });
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            Nombre = "Dell"
                        },
                        new
                        {
                            MarcaId = 2,
                            Nombre = "Hp"
                        },
                        new
                        {
                            MarcaId = 3,
                            Nombre = "Acer"
                        },
                        new
                        {
                            MarcaId = 4,
                            Nombre = "Lenovo"
                        },
                        new
                        {
                            MarcaId = 5,
                            Nombre = "Asus"
                        });
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Prestamo", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Devolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Entrega")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PrestamoId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelAcademico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CarreraId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasFilter("[Codigo] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Carrera", b =>
                {
                    b.HasOne("PrestamosBiblioteca.Models.Facultad", "Facultad")
                        .WithMany("Carreras")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Equipo", b =>
                {
                    b.HasOne("PrestamosBiblioteca.Models.Marca", "Marca")
                        .WithMany("Equipos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Prestamo", b =>
                {
                    b.HasOne("PrestamosBiblioteca.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrestamosBiblioteca.Models.Usuario", "Usuario")
                        .WithMany("Prestamos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrestamosBiblioteca.Models.Usuario", b =>
                {
                    b.HasOne("PrestamosBiblioteca.Models.Carrera", "Carrera")
                        .WithMany("Usuarios")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
